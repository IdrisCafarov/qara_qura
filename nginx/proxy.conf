# # HTTP 1.1 support
# proxy_http_version 1.1;
# proxy_buffering off;
# proxy_set_header Host $http_host;
# proxy_set_header Upgrade $http_upgrade;
# proxy_set_header Connection $proxy_connection;
# proxy_set_header X-Real-IP $remote_addr;
# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
# proxy_set_header X-Forwarded-Ssl $proxy_x_forwarded_ssl;
# proxy_set_header X-Forwarded-Port $proxy_x_forwarded_port;
# # Mitigate httpoxy attack (see README for details)
# proxy_set_header Proxy "";
# proxy_buffer_size          128k;
# proxy_buffers              4 256k;
# proxy_busy_buffers_size    256k;



# Default server configuration
# server {
#     listen 80;
#     listen 127.0.01;	
#     listen [::]:80 default_server ipv6only=on;
#     return 301 https://$host$request_uri;
# }
# server {
#     # Enable HTTP/2
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name ww2.zone;

#     # Use the Letâ€™s Encrypt certificates
#     ssl_certificate /etc/letsencrypt/live/ww2.zone/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/ww2.zone/privkey.pem;

#     # Include the SSL configuration from cipherli.st
#     include snippets/ssl-params.conf;

#     location / {
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-NginX-Proxy true;
#         proxy_pass http://localhost:8000/;
#         proxy_ssl_session_reuse off;
#         proxy_set_header Host $http_host;
#         proxy_cache_bypass $http_upgrade;
#         proxy_redirect off;
#     }
# }


# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user root;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 8M;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    #include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*.*;

    server {
        listen 80;
        server_name _;
        location / {
            proxy_pass http://localhost:5000/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection keep-alive;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
